# 톰켓 서버 포트
server.port=18080

# 개발할 때애만 create-drop 또는 update를 사용하고 운영 환경에서는 validate를 사용합니다.
spring.jpa.hibernate.ddl-auto=create

# 개발시 SQL 로깅을 하여 어떤 값으로 어떤 SQL이 실행되는지 출력
logging.level.org.hibernate.SQL=debug

# 와일드문자 출력
logging.level.org.hibernate.type.descriptor.sql=trace

# 콘솔창에 JPA-SQL문 출력후 포멧을 맞춰준다.
#spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true

# MySQL 을 사용할 것.
spring.jpa.database=mysql

# MySQL 상세 지정
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

# MySQL 설정
spring.datasource.url=jdbc:mysql://localhost:3306/testdb?useSSL=false&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

#Host 환경 지정
App.host=http://localhost:18080

#G-MAIL SMTP 설정
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=tomuda72@gmail.com
spring.mail.password=tid62708662!@
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true